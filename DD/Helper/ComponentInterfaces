//AUTHENTICATION
public interface AuthenticationInterface{
  boolean checkLoginUser(String email, String password);
  boolean checkSignupUser(String email);
  boolean checkLoginMunicipality(String referenceCode, String password);
}
public interface AuthenticationDBMS{
  User getUser(String email);
  boolean insertUser(String email, String password);
  Municipality getMunicipality(String referenceCode);
  boolean insertMunicipality(String referenceCode, String password);
}

//NOTIFICATION
public interface NotificationInterface{
  String createNotification(UserReport userReport);
  boolean sendNotification(String notification);
}
public interface PushInterface{
  boolean sendNotification(String notification);
}

//DATA
public interface DataInterface{
  List<UserReport> getUserReports(String email, Timestamp time, String typeOfViolation, Position position, String licensePlate);
  JSONObject getInterventions(Timestamp time);
  boolean insertInterventions(JSONObject interventions);
  JSONObject getAccidents(String email, Timestamp time, String typeOfViolation, Position position, String licensePlate);
  boolean insertNewAccidents(JSONObject accidents);
  JSONObject
}
//Reports
public interface ReportsDBMS{
  //to retrieve User reports from Reports DB for the following purposes:
  //Public Statistics, Detailed Statistics, My Reports, Possible Interventions(Data crossing), Ticket feedback.
  List<UserReport> getUserReports(String email, Timestamp time, String typeOfViolation, Position position, String licensePlate);
  //to add a new User report to Reports DB
  boolean insertUserReport(UserReport userReport);
  boolean addFeedback(UserReport userReport);
}
//Interventions
public interface InterventionsDBMS{
  //to retrieve latest Interventions from Interventions DB
  JSONObject getInterventions(Timestamp time);
  //to add the latest Interventions to Interventions DB
  boolean insertInterventions(JSONObject interventions);
  //to add new Accidents to Interventions DB
  boolean insertNewAccidents(JSONObject accidents);
  //to retrieve the quiered Accidents data from Interventions DB
  JSONObject getAccidents(String email, Timestamp time, String typeOfViolation, Position position, String licensePlate);
}
public interface AccidentsAPIREST{
  //to retrieve latest Accidents from Municipality infrastructure
  JSONObject getAccidentsFromMunicipality(Timestamp time);
}

//Municipality
public interface WebAppInterface{

}
public interface HTTPS{
  boolean sendInterventions(JSONObject interventions);
  boolean sendUserReport(UserReport userReport);
  boolean sendDetailedStatistics(JSONObject detailedS);
}

//User
public interface MobileAppInterface{

}

//External services
public interface MapsAPI{

}
public interface APIREST{

}